var AudioNode = require('./AudioNode')
  , readOnlyAttr = require('./utils').readOnlyAttr


var AudioDestinationNode = (function(super$0){"use strict";var PRS$0 = (function(o,t){o["__proto__"]={"a":t};return o["a"]===t})({},{});var DP$0 = Object.defineProperty;var GOPD$0 = Object.getOwnPropertyDescriptor;var MIXIN$0 = function(t,s){for(var p in s){if(s.hasOwnProperty(p)){DP$0(t,p,GOPD$0(s,p));}}return t};var SP$0 = Object.setPrototypeOf||function(o,p){if(PRS$0){o["__proto__"]=p;}else {DP$0(o,"__proto__",{"value":p,"configurable":true,"enumerable":false,"writable":true});}return o};var OC$0 = Object.create;if(!PRS$0)MIXIN$0(AudioDestinationNode, super$0);var proto$0={};

  function AudioDestinationNode(context) {
    super$0.call(this, context, 1, 0, 2, 'explicit', 'speakers')

    readOnlyAttr(this, 'maxChannelCount', 2)
  }if(super$0!==null)SP$0(AudioDestinationNode,super$0);AudioDestinationNode.prototype = OC$0(super$0!==null?super$0.prototype:null,{"constructor":{"value":AudioDestinationNode,"configurable":true,"writable":true}});DP$0(AudioDestinationNode,"prototype",{"configurable":false,"enumerable":false,"writable":false});

  // This only pulls the data from the nodes upstream
  proto$0._tick = function() {
    return this._inputs[0]._tick()
  };

MIXIN$0(AudioDestinationNode.prototype,proto$0);proto$0=void 0;return AudioDestinationNode;})(AudioNode);


module.exports = AudioDestinationNode
